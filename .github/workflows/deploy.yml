name: Build, Push e Deploy no AKS

on:
  push:
    branches: [ "master" ]

env:
  DOCKER_API_IMAGE: murilodev96/burguer404api
  DOCKER_FRONT_IMAGE: murilodev96/burguer404front
  TF_DIR: infra/terraform
  K8S_DIR: k8s
  AZURE_RESOURCE_GROUP: rg-burguer404
  AZURE_AKS_CLUSTER: aks-burguer404

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Login na Azure via Service Principal
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      working-directory: ${{ env.TF_DIR }}
      run: terraform init

    - name: Terraform Plan
      working-directory: ${{ env.TF_DIR }}
      run: terraform plan

    - name: Terraform Apply
      working-directory: ${{ env.TF_DIR }}
      run: terraform apply -auto-approve

    - name: Obter credenciais do AKS
      run: |
        az aks get-credentials --resource-group $AZURE_RESOURCE_GROUP --name $AZURE_AKS_CLUSTER --overwrite-existing --admin

    # ------------------------------------------
    # Docker Build e Push
    # ------------------------------------------

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login no Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build e Push da API
      run: |
        docker build -t $DOCKER_API_IMAGE:${{ github.sha }} -f Burguer404.Api/Dockerfile .
        docker push $DOCKER_API_IMAGE:${{ github.sha }}

    - name: Build e Push do Frontend
      run: |
        docker build -t $DOCKER_FRONT_IMAGE:${{ github.sha }} -f Burguer404.Frontend/Dockerfile .
        docker push $DOCKER_FRONT_IMAGE:${{ github.sha }}

    # ------------------------------------------
    # Aplicar YAMLs do Kubernetes
    # ------------------------------------------

    - name: Atualizar deploys no AKS
      run: |
      # Substituir TAGs temporárias pelas versões com SHA
        sed -i "s|murilodev96/burguer404api:TAG_NOVA_VERSAO|murilodev96/burguer404api:${{ github.sha }}|g" $K8S_DIR/backend-deployment.yaml
        sed -i "s|murilodev96/burguer404front:TAG_NOVA_VERSAO|murilodev96/burguer404front:${{ github.sha }}|g" $K8S_DIR/frontend-deployment.yaml

        kubectl apply -f $K8S_DIR/configmap.yaml
        kubectl apply -f $K8S_DIR/secret.yaml
        kubectl apply -f $K8S_DIR/db-deployment.yaml
        kubectl apply -f $K8S_DIR/db-service.yaml
        kubectl apply -f $K8S_DIR/backend-deployment.yaml
        kubectl apply -f $K8S_DIR/backend-service.yaml
        kubectl apply -f $K8S_DIR/frontend-deployment.yaml
        kubectl apply -f $K8S_DIR/frontend-service.yaml
        kubectl apply -f $K8S_DIR/hpa-backend.yaml
        kubectl apply -f $K8S_DIR/hpa-frontend.yaml
        kubectl apply -f $K8S_DIR/metrics.yaml
